Start testing: Feb 16 20:18 UTC
----------------------------------------------------------
1/23 Testing: Pivot.Empty
1/23 Test: Pivot.Empty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Empty"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Empty" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==856== Memcheck, a memory error detector
==856== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==856== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==856== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Empty
==856== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Empty
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Empty
[       OK ] Pivot.Empty (19 ms)
[----------] 1 test from Pivot (28 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (78 ms total)
[  PASSED  ] 1 test.
==856== 
==856== HEAP SUMMARY:
==856==     in use at exit: 0 bytes in 0 blocks
==856==   total heap usage: 404 allocs, 404 frees, 133,083 bytes allocated
==856== 
==856== All heap blocks were freed -- no leaks are possible
==856== 
==856== For counts of detected and suppressed errors, rerun with: -v
==856== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.56 sec
----------------------------------------------------------
Test Passed.
"Pivot.Empty" end time: Feb 16 20:18 UTC
"Pivot.Empty" time elapsed: 00:00:01
----------------------------------------------------------

2/23 Testing: Pivot.Size1SmallEmpty
2/23 Test: Pivot.Size1SmallEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Size1SmallEmpty"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Size1SmallEmpty" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==857== Memcheck, a memory error detector
==857== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==857== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==857== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Size1SmallEmpty
==857== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Size1SmallEmpty
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Size1SmallEmpty
==857== Invalid read of size 8
==857==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==857==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==857==    by 0x10D731: Pivot_Size1SmallEmpty_Test::TestBody() (llrec_tests.cpp:73)
==857==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==  Address 0xa is not stack'd, malloc'd or (recently) free'd
==857== 
==857== 
==857== Process terminating with default action of signal 11 (SIGSEGV)
==857==  Access not within mapped region at address 0xA
==857==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==857==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==857==    by 0x10D731: Pivot_Size1SmallEmpty_Test::TestBody() (llrec_tests.cpp:73)
==857==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==  If you believe this happened as a result of a stack
==857==  overflow in your program's main thread (unlikely but
==857==  possible), you can try to increase the size of the
==857==  main thread stack using the --main-stacksize= flag.
==857==  The main thread stack size used in this run was 8388608.
==857== 
==857== HEAP SUMMARY:
==857==     in use at exit: 10,338 bytes in 101 blocks
==857==   total heap usage: 405 allocs, 304 frees, 130,580 bytes allocated
==857== 
==857== 16 bytes in 1 blocks are definitely lost in loss record 33 of 100
==857==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==857==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==857==    by 0x10D6D1: Pivot_Size1SmallEmpty_Test::TestBody() (llrec_tests.cpp:70)
==857==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==857== 
==857== LEAK SUMMARY:
==857==    definitely lost: 16 bytes in 1 blocks
==857==    indirectly lost: 0 bytes in 0 blocks
==857==      possibly lost: 0 bytes in 0 blocks
==857==    still reachable: 10,322 bytes in 100 blocks
==857==         suppressed: 0 bytes in 0 blocks
==857== Reachable blocks (those to which a pointer was found) are not shown.
==857== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==857== 
==857== For counts of detected and suppressed errors, rerun with: -v
==857== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.68 sec
----------------------------------------------------------
Test Failed.
"Pivot.Size1SmallEmpty" end time: Feb 16 20:18 UTC
"Pivot.Size1SmallEmpty" time elapsed: 00:00:01
----------------------------------------------------------

3/23 Testing: Pivot.Size1LargeEmpty
3/23 Test: Pivot.Size1LargeEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Size1LargeEmpty"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Size1LargeEmpty" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==858== Memcheck, a memory error detector
==858== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==858== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==858== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Size1LargeEmpty
==858== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Size1LargeEmpty
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Size1LargeEmpty
==858== Invalid read of size 8
==858==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==858==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==858==    by 0x10DD23: Pivot_Size1LargeEmpty_Test::TestBody() (llrec_tests.cpp:88)
==858==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==  Address 0xa is not stack'd, malloc'd or (recently) free'd
==858== 
==858== 
==858== Process terminating with default action of signal 11 (SIGSEGV)
==858==  Access not within mapped region at address 0xA
==858==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==858==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==858==    by 0x10DD23: Pivot_Size1LargeEmpty_Test::TestBody() (llrec_tests.cpp:88)
==858==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==  If you believe this happened as a result of a stack
==858==  overflow in your program's main thread (unlikely but
==858==  possible), you can try to increase the size of the
==858==  main thread stack using the --main-stacksize= flag.
==858==  The main thread stack size used in this run was 8388608.
==858== 
==858== HEAP SUMMARY:
==858==     in use at exit: 10,338 bytes in 101 blocks
==858==   total heap usage: 405 allocs, 304 frees, 130,580 bytes allocated
==858== 
==858== 16 bytes in 1 blocks are definitely lost in loss record 33 of 100
==858==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==858==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==858==    by 0x10DCC3: Pivot_Size1LargeEmpty_Test::TestBody() (llrec_tests.cpp:85)
==858==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==858== 
==858== LEAK SUMMARY:
==858==    definitely lost: 16 bytes in 1 blocks
==858==    indirectly lost: 0 bytes in 0 blocks
==858==      possibly lost: 0 bytes in 0 blocks
==858==    still reachable: 10,322 bytes in 100 blocks
==858==         suppressed: 0 bytes in 0 blocks
==858== Reachable blocks (those to which a pointer was found) are not shown.
==858== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==858== 
==858== For counts of detected and suppressed errors, rerun with: -v
==858== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.53 sec
----------------------------------------------------------
Test Failed.
"Pivot.Size1LargeEmpty" end time: Feb 16 20:18 UTC
"Pivot.Size1LargeEmpty" time elapsed: 00:00:01
----------------------------------------------------------

4/23 Testing: Pivot.Size2SmallLarge
4/23 Test: Pivot.Size2SmallLarge
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Size2SmallLarge"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Size2SmallLarge" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==859== Memcheck, a memory error detector
==859== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==859== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==859== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Size2SmallLarge
==859== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Size2SmallLarge
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Size2SmallLarge
==859== Invalid read of size 8
==859==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==859==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==859==    by 0x10E329: Pivot_Size2SmallLarge_Test::TestBody() (llrec_tests.cpp:103)
==859==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==  Address 0xa is not stack'd, malloc'd or (recently) free'd
==859== 
==859== 
==859== Process terminating with default action of signal 11 (SIGSEGV)
==859==  Access not within mapped region at address 0xA
==859==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==859==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==859==    by 0x10E329: Pivot_Size2SmallLarge_Test::TestBody() (llrec_tests.cpp:103)
==859==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==  If you believe this happened as a result of a stack
==859==  overflow in your program's main thread (unlikely but
==859==  possible), you can try to increase the size of the
==859==  main thread stack using the --main-stacksize= flag.
==859==  The main thread stack size used in this run was 8388608.
==859== 
==859== HEAP SUMMARY:
==859==     in use at exit: 10,354 bytes in 102 blocks
==859==   total heap usage: 406 allocs, 304 frees, 130,600 bytes allocated
==859== 
==859== 32 (16 direct, 16 indirect) bytes in 1 blocks are definitely lost in loss record 43 of 101
==859==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==859==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==859==    by 0x10E2C9: Pivot_Size2SmallLarge_Test::TestBody() (llrec_tests.cpp:100)
==859==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==859== 
==859== LEAK SUMMARY:
==859==    definitely lost: 16 bytes in 1 blocks
==859==    indirectly lost: 16 bytes in 1 blocks
==859==      possibly lost: 0 bytes in 0 blocks
==859==    still reachable: 10,322 bytes in 100 blocks
==859==         suppressed: 0 bytes in 0 blocks
==859== Reachable blocks (those to which a pointer was found) are not shown.
==859== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==859== 
==859== For counts of detected and suppressed errors, rerun with: -v
==859== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.50 sec
----------------------------------------------------------
Test Failed.
"Pivot.Size2SmallLarge" end time: Feb 16 20:18 UTC
"Pivot.Size2SmallLarge" time elapsed: 00:00:01
----------------------------------------------------------

5/23 Testing: Pivot.Size2LargeSmall
5/23 Test: Pivot.Size2LargeSmall
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Size2LargeSmall"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Size2LargeSmall" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==860== Memcheck, a memory error detector
==860== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==860== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==860== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Size2LargeSmall
==860== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Size2LargeSmall
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Size2LargeSmall
==860== Invalid read of size 8
==860==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==860==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==860==    by 0x10E98B: Pivot_Size2LargeSmall_Test::TestBody() (llrec_tests.cpp:118)
==860==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==  Address 0xc is not stack'd, malloc'd or (recently) free'd
==860== 
==860== 
==860== Process terminating with default action of signal 11 (SIGSEGV)
==860==  Access not within mapped region at address 0xC
==860==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==860==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==860==    by 0x10E98B: Pivot_Size2LargeSmall_Test::TestBody() (llrec_tests.cpp:118)
==860==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==  If you believe this happened as a result of a stack
==860==  overflow in your program's main thread (unlikely but
==860==  possible), you can try to increase the size of the
==860==  main thread stack using the --main-stacksize= flag.
==860==  The main thread stack size used in this run was 8388608.
==860== 
==860== HEAP SUMMARY:
==860==     in use at exit: 10,354 bytes in 102 blocks
==860==   total heap usage: 406 allocs, 304 frees, 130,600 bytes allocated
==860== 
==860== 32 (16 direct, 16 indirect) bytes in 1 blocks are definitely lost in loss record 43 of 101
==860==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==860==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==860==    by 0x10E92B: Pivot_Size2LargeSmall_Test::TestBody() (llrec_tests.cpp:115)
==860==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==860== 
==860== LEAK SUMMARY:
==860==    definitely lost: 16 bytes in 1 blocks
==860==    indirectly lost: 16 bytes in 1 blocks
==860==      possibly lost: 0 bytes in 0 blocks
==860==    still reachable: 10,322 bytes in 100 blocks
==860==         suppressed: 0 bytes in 0 blocks
==860== Reachable blocks (those to which a pointer was found) are not shown.
==860== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==860== 
==860== For counts of detected and suppressed errors, rerun with: -v
==860== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.52 sec
----------------------------------------------------------
Test Failed.
"Pivot.Size2LargeSmall" end time: Feb 16 20:18 UTC
"Pivot.Size2LargeSmall" time elapsed: 00:00:01
----------------------------------------------------------

6/23 Testing: Pivot.Size3LargeSmallLarge
6/23 Test: Pivot.Size3LargeSmallLarge
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Size3LargeSmallLarge"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Size3LargeSmallLarge" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==861== Memcheck, a memory error detector
==861== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==861== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==861== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Size3LargeSmallLarge
==861== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Size3LargeSmallLarge
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Size3LargeSmallLarge
==861== Invalid read of size 8
==861==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==861==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==861==    by 0x10EFED: Pivot_Size3LargeSmallLarge_Test::TestBody() (llrec_tests.cpp:133)
==861==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==  Address 0xc is not stack'd, malloc'd or (recently) free'd
==861== 
==861== 
==861== Process terminating with default action of signal 11 (SIGSEGV)
==861==  Access not within mapped region at address 0xC
==861==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==861==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==861==    by 0x10EFED: Pivot_Size3LargeSmallLarge_Test::TestBody() (llrec_tests.cpp:133)
==861==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==  If you believe this happened as a result of a stack
==861==  overflow in your program's main thread (unlikely but
==861==  possible), you can try to increase the size of the
==861==  main thread stack using the --main-stacksize= flag.
==861==  The main thread stack size used in this run was 8388608.
==861== 
==861== HEAP SUMMARY:
==861==     in use at exit: 10,380 bytes in 103 blocks
==861==   total heap usage: 407 allocs, 304 frees, 130,670 bytes allocated
==861== 
==861== 48 (16 direct, 32 indirect) bytes in 1 blocks are definitely lost in loss record 45 of 101
==861==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==861==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==861==    by 0x10EF8D: Pivot_Size3LargeSmallLarge_Test::TestBody() (llrec_tests.cpp:130)
==861==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==861== 
==861== LEAK SUMMARY:
==861==    definitely lost: 16 bytes in 1 blocks
==861==    indirectly lost: 32 bytes in 2 blocks
==861==      possibly lost: 0 bytes in 0 blocks
==861==    still reachable: 10,332 bytes in 100 blocks
==861==         suppressed: 0 bytes in 0 blocks
==861== Reachable blocks (those to which a pointer was found) are not shown.
==861== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==861== 
==861== For counts of detected and suppressed errors, rerun with: -v
==861== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.48 sec
----------------------------------------------------------
Test Failed.
"Pivot.Size3LargeSmallLarge" end time: Feb 16 20:18 UTC
"Pivot.Size3LargeSmallLarge" time elapsed: 00:00:01
----------------------------------------------------------

7/23 Testing: Pivot.Size3SmallLargeSmall
7/23 Test: Pivot.Size3SmallLargeSmall
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Size3SmallLargeSmall"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Size3SmallLargeSmall" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==862== Memcheck, a memory error detector
==862== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==862== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==862== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Size3SmallLargeSmall
==862== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Size3SmallLargeSmall
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Size3SmallLargeSmall
==862== Invalid read of size 8
==862==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==862==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==862==    by 0x10F64F: Pivot_Size3SmallLargeSmall_Test::TestBody() (llrec_tests.cpp:148)
==862==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==  Address 0xc is not stack'd, malloc'd or (recently) free'd
==862== 
==862== 
==862== Process terminating with default action of signal 11 (SIGSEGV)
==862==  Access not within mapped region at address 0xC
==862==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==862==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==862==    by 0x10F64F: Pivot_Size3SmallLargeSmall_Test::TestBody() (llrec_tests.cpp:148)
==862==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==  If you believe this happened as a result of a stack
==862==  overflow in your program's main thread (unlikely but
==862==  possible), you can try to increase the size of the
==862==  main thread stack using the --main-stacksize= flag.
==862==  The main thread stack size used in this run was 8388608.
==862== 
==862== HEAP SUMMARY:
==862==     in use at exit: 10,380 bytes in 103 blocks
==862==   total heap usage: 407 allocs, 304 frees, 130,670 bytes allocated
==862== 
==862== 48 (16 direct, 32 indirect) bytes in 1 blocks are definitely lost in loss record 45 of 101
==862==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==862==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==862==    by 0x10F5EF: Pivot_Size3SmallLargeSmall_Test::TestBody() (llrec_tests.cpp:145)
==862==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==862== 
==862== LEAK SUMMARY:
==862==    definitely lost: 16 bytes in 1 blocks
==862==    indirectly lost: 32 bytes in 2 blocks
==862==      possibly lost: 0 bytes in 0 blocks
==862==    still reachable: 10,332 bytes in 100 blocks
==862==         suppressed: 0 bytes in 0 blocks
==862== Reachable blocks (those to which a pointer was found) are not shown.
==862== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==862== 
==862== For counts of detected and suppressed errors, rerun with: -v
==862== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.51 sec
----------------------------------------------------------
Test Failed.
"Pivot.Size3SmallLargeSmall" end time: Feb 16 20:18 UTC
"Pivot.Size3SmallLargeSmall" time elapsed: 00:00:01
----------------------------------------------------------

8/23 Testing: Pivot.Size3LargeLargeSmall
8/23 Test: Pivot.Size3LargeLargeSmall
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Size3LargeLargeSmall"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Size3LargeLargeSmall" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==863== Memcheck, a memory error detector
==863== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==863== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==863== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Size3LargeLargeSmall
==863== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Size3LargeLargeSmall
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Size3LargeLargeSmall
==863== Invalid read of size 8
==863==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==863==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==863==    by 0x10FCB1: Pivot_Size3LargeLargeSmall_Test::TestBody() (llrec_tests.cpp:163)
==863==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==  Address 0xc is not stack'd, malloc'd or (recently) free'd
==863== 
==863== 
==863== Process terminating with default action of signal 11 (SIGSEGV)
==863==  Access not within mapped region at address 0xC
==863==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==863==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==863==    by 0x10FCB1: Pivot_Size3LargeLargeSmall_Test::TestBody() (llrec_tests.cpp:163)
==863==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==  If you believe this happened as a result of a stack
==863==  overflow in your program's main thread (unlikely but
==863==  possible), you can try to increase the size of the
==863==  main thread stack using the --main-stacksize= flag.
==863==  The main thread stack size used in this run was 8388608.
==863== 
==863== HEAP SUMMARY:
==863==     in use at exit: 10,380 bytes in 103 blocks
==863==   total heap usage: 407 allocs, 304 frees, 130,670 bytes allocated
==863== 
==863== 48 (16 direct, 32 indirect) bytes in 1 blocks are definitely lost in loss record 45 of 101
==863==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==863==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==863==    by 0x10FC51: Pivot_Size3LargeLargeSmall_Test::TestBody() (llrec_tests.cpp:160)
==863==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==863== 
==863== LEAK SUMMARY:
==863==    definitely lost: 16 bytes in 1 blocks
==863==    indirectly lost: 32 bytes in 2 blocks
==863==      possibly lost: 0 bytes in 0 blocks
==863==    still reachable: 10,332 bytes in 100 blocks
==863==         suppressed: 0 bytes in 0 blocks
==863== Reachable blocks (those to which a pointer was found) are not shown.
==863== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==863== 
==863== For counts of detected and suppressed errors, rerun with: -v
==863== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.54 sec
----------------------------------------------------------
Test Failed.
"Pivot.Size3LargeLargeSmall" end time: Feb 16 20:18 UTC
"Pivot.Size3LargeLargeSmall" time elapsed: 00:00:01
----------------------------------------------------------

9/23 Testing: Pivot.Size6SmallThenLarge
9/23 Test: Pivot.Size6SmallThenLarge
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Size6SmallThenLarge"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Size6SmallThenLarge" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==864== Memcheck, a memory error detector
==864== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==864== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==864== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Size6SmallThenLarge
==864== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Size6SmallThenLarge
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Size6SmallThenLarge
==864== Invalid read of size 8
==864==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==864==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==864==    by 0x110313: Pivot_Size6SmallThenLarge_Test::TestBody() (llrec_tests.cpp:179)
==864==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==  Address 0xa is not stack'd, malloc'd or (recently) free'd
==864== 
==864== 
==864== Process terminating with default action of signal 11 (SIGSEGV)
==864==  Access not within mapped region at address 0xA
==864==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==864==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==864==    by 0x110313: Pivot_Size6SmallThenLarge_Test::TestBody() (llrec_tests.cpp:179)
==864==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==  If you believe this happened as a result of a stack
==864==  overflow in your program's main thread (unlikely but
==864==  possible), you can try to increase the size of the
==864==  main thread stack using the --main-stacksize= flag.
==864==  The main thread stack size used in this run was 8388608.
==864== 
==864== HEAP SUMMARY:
==864==     in use at exit: 10,426 bytes in 106 blocks
==864==   total heap usage: 410 allocs, 304 frees, 130,720 bytes allocated
==864== 
==864== 96 (16 direct, 80 indirect) bytes in 1 blocks are definitely lost in loss record 71 of 101
==864==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==864==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==864==    by 0x1102B3: Pivot_Size6SmallThenLarge_Test::TestBody() (llrec_tests.cpp:176)
==864==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==864== 
==864== LEAK SUMMARY:
==864==    definitely lost: 16 bytes in 1 blocks
==864==    indirectly lost: 80 bytes in 5 blocks
==864==      possibly lost: 0 bytes in 0 blocks
==864==    still reachable: 10,330 bytes in 100 blocks
==864==         suppressed: 0 bytes in 0 blocks
==864== Reachable blocks (those to which a pointer was found) are not shown.
==864== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==864== 
==864== For counts of detected and suppressed errors, rerun with: -v
==864== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.59 sec
----------------------------------------------------------
Test Failed.
"Pivot.Size6SmallThenLarge" end time: Feb 16 20:18 UTC
"Pivot.Size6SmallThenLarge" time elapsed: 00:00:01
----------------------------------------------------------

10/23 Testing: Pivot.Size6LargeThenSmall
10/23 Test: Pivot.Size6LargeThenSmall
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Size6LargeThenSmall"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Size6LargeThenSmall" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==865== Memcheck, a memory error detector
==865== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==865== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==865== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Size6LargeThenSmall
==865== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Size6LargeThenSmall
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Size6LargeThenSmall
==865== Invalid read of size 8
==865==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==865==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==865==    by 0x110975: Pivot_Size6LargeThenSmall_Test::TestBody() (llrec_tests.cpp:194)
==865==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==  Address 0xe is not stack'd, malloc'd or (recently) free'd
==865== 
==865== 
==865== Process terminating with default action of signal 11 (SIGSEGV)
==865==  Access not within mapped region at address 0xE
==865==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==865==    by 0x11BD07: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:20)
==865==    by 0x110975: Pivot_Size6LargeThenSmall_Test::TestBody() (llrec_tests.cpp:194)
==865==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==  If you believe this happened as a result of a stack
==865==  overflow in your program's main thread (unlikely but
==865==  possible), you can try to increase the size of the
==865==  main thread stack using the --main-stacksize= flag.
==865==  The main thread stack size used in this run was 8388608.
==865== 
==865== HEAP SUMMARY:
==865==     in use at exit: 10,426 bytes in 106 blocks
==865==   total heap usage: 410 allocs, 304 frees, 130,720 bytes allocated
==865== 
==865== 96 (16 direct, 80 indirect) bytes in 1 blocks are definitely lost in loss record 71 of 101
==865==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==865==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==865==    by 0x110915: Pivot_Size6LargeThenSmall_Test::TestBody() (llrec_tests.cpp:191)
==865==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==865== 
==865== LEAK SUMMARY:
==865==    definitely lost: 16 bytes in 1 blocks
==865==    indirectly lost: 80 bytes in 5 blocks
==865==      possibly lost: 0 bytes in 0 blocks
==865==    still reachable: 10,330 bytes in 100 blocks
==865==         suppressed: 0 bytes in 0 blocks
==865== Reachable blocks (those to which a pointer was found) are not shown.
==865== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==865== 
==865== For counts of detected and suppressed errors, rerun with: -v
==865== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.81 sec
----------------------------------------------------------
Test Failed.
"Pivot.Size6LargeThenSmall" end time: Feb 16 20:18 UTC
"Pivot.Size6LargeThenSmall" time elapsed: 00:00:01
----------------------------------------------------------

11/23 Testing: Pivot.Nominal
11/23 Test: Pivot.Nominal
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Nominal"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.Nominal" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==866== Memcheck, a memory error detector
==866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==866== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==866== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Nominal
==866== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Nominal
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Nominal
==866== Invalid read of size 8
==866==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==866==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==866==    by 0x110FD7: Pivot_Nominal_Test::TestBody() (llrec_tests.cpp:210)
==866==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==  Address 0xa is not stack'd, malloc'd or (recently) free'd
==866== 
==866== 
==866== Process terminating with default action of signal 11 (SIGSEGV)
==866==  Access not within mapped region at address 0xA
==866==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==866==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==866==    by 0x110FD7: Pivot_Nominal_Test::TestBody() (llrec_tests.cpp:210)
==866==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==  If you believe this happened as a result of a stack
==866==  overflow in your program's main thread (unlikely but
==866==  possible), you can try to increase the size of the
==866==  main thread stack using the --main-stacksize= flag.
==866==  The main thread stack size used in this run was 8388608.
==866== 
==866== HEAP SUMMARY:
==866==     in use at exit: 10,308 bytes in 102 blocks
==866==   total heap usage: 402 allocs, 300 frees, 130,429 bytes allocated
==866== 
==866== 64 (16 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 69 of 99
==866==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==866==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==866==    by 0x110F77: Pivot_Nominal_Test::TestBody() (llrec_tests.cpp:206)
==866==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==866== 
==866== LEAK SUMMARY:
==866==    definitely lost: 16 bytes in 1 blocks
==866==    indirectly lost: 48 bytes in 3 blocks
==866==      possibly lost: 0 bytes in 0 blocks
==866==    still reachable: 10,244 bytes in 98 blocks
==866==         suppressed: 0 bytes in 0 blocks
==866== Reachable blocks (those to which a pointer was found) are not shown.
==866== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==866== 
==866== For counts of detected and suppressed errors, rerun with: -v
==866== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.08 sec
----------------------------------------------------------
Test Failed.
"Pivot.Nominal" end time: Feb 16 20:18 UTC
"Pivot.Nominal" time elapsed: 00:00:02
----------------------------------------------------------

12/23 Testing: Pivot.SameValues
12/23 Test: Pivot.SameValues
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.SameValues"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.SameValues" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==867== Memcheck, a memory error detector
==867== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==867== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==867== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.SameValues
==867== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.SameValues
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.SameValues
==867== Invalid read of size 8
==867==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==867==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==867==    by 0x111625: Pivot_SameValues_Test::TestBody() (llrec_tests.cpp:226)
==867==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==  Address 0xa is not stack'd, malloc'd or (recently) free'd
==867== 
==867== 
==867== Process terminating with default action of signal 11 (SIGSEGV)
==867==  Access not within mapped region at address 0xA
==867==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==867==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==867==    by 0x111625: Pivot_SameValues_Test::TestBody() (llrec_tests.cpp:226)
==867==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==  If you believe this happened as a result of a stack
==867==  overflow in your program's main thread (unlikely but
==867==  possible), you can try to increase the size of the
==867==  main thread stack using the --main-stacksize= flag.
==867==  The main thread stack size used in this run was 8388608.
==867== 
==867== HEAP SUMMARY:
==867==     in use at exit: 10,376 bytes in 104 blocks
==867==   total heap usage: 408 allocs, 304 frees, 130,590 bytes allocated
==867== 
==867== 64 (16 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 71 of 101
==867==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==867==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==867==    by 0x1115C5: Pivot_SameValues_Test::TestBody() (llrec_tests.cpp:222)
==867==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==867== 
==867== LEAK SUMMARY:
==867==    definitely lost: 16 bytes in 1 blocks
==867==    indirectly lost: 48 bytes in 3 blocks
==867==      possibly lost: 0 bytes in 0 blocks
==867==    still reachable: 10,312 bytes in 100 blocks
==867==         suppressed: 0 bytes in 0 blocks
==867== Reachable blocks (those to which a pointer was found) are not shown.
==867== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==867== 
==867== For counts of detected and suppressed errors, rerun with: -v
==867== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.69 sec
----------------------------------------------------------
Test Failed.
"Pivot.SameValues" end time: Feb 16 20:18 UTC
"Pivot.SameValues" time elapsed: 00:00:01
----------------------------------------------------------

13/23 Testing: Pivot.NoCopySameNodeCheck
13/23 Test: Pivot.NoCopySameNodeCheck
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.NoCopySameNodeCheck"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Pivot.NoCopySameNodeCheck" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==868== Memcheck, a memory error detector
==868== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==868== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==868== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.NoCopySameNodeCheck
==868== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.NoCopySameNodeCheck
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.NoCopySameNodeCheck
==868== Invalid read of size 8
==868==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==868==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==868==    by 0x111C81: Pivot_NoCopySameNodeCheck_Test::TestBody() (llrec_tests.cpp:248)
==868==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==  Address 0xa is not stack'd, malloc'd or (recently) free'd
==868== 
==868== 
==868== Process terminating with default action of signal 11 (SIGSEGV)
==868==  Access not within mapped region at address 0xA
==868==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==868==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==868==    by 0x111C81: Pivot_NoCopySameNodeCheck_Test::TestBody() (llrec_tests.cpp:248)
==868==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==868==  If you believe this happened as a result of a stack
==868==  overflow in your program's main thread (unlikely but
==868==  possible), you can try to increase the size of the
==868==  main thread stack using the --main-stacksize= flag.
==868==  The main thread stack size used in this run was 8388608.
==868== 
==868== HEAP SUMMARY:
==868==     in use at exit: 10,426 bytes in 105 blocks
==868==   total heap usage: 411 allocs, 306 frees, 130,736 bytes allocated
==868== 
==868== LEAK SUMMARY:
==868==    definitely lost: 0 bytes in 0 blocks
==868==    indirectly lost: 0 bytes in 0 blocks
==868==      possibly lost: 0 bytes in 0 blocks
==868==    still reachable: 10,426 bytes in 105 blocks
==868==         suppressed: 0 bytes in 0 blocks
==868== Reachable blocks (those to which a pointer was found) are not shown.
==868== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==868== 
==868== For counts of detected and suppressed errors, rerun with: -v
==868== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.85 sec
----------------------------------------------------------
Test Failed.
"Pivot.NoCopySameNodeCheck" end time: Feb 16 20:18 UTC
"Pivot.NoCopySameNodeCheck" time elapsed: 00:00:01
----------------------------------------------------------

14/23 Testing: Filter.EmptyList
14/23 Test: Filter.EmptyList
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.EmptyList"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.EmptyList" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==869== Memcheck, a memory error detector
==869== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==869== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==869== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.EmptyList
==869== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.EmptyList
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.EmptyList
[       OK ] Filter.EmptyList (30 ms)
[----------] 1 test from Filter (44 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (111 ms total)
[  PASSED  ] 1 test.
==869== 
==869== HEAP SUMMARY:
==869==     in use at exit: 0 bytes in 0 blocks
==869==   total heap usage: 410 allocs, 410 frees, 133,254 bytes allocated
==869== 
==869== All heap blocks were freed -- no leaks are possible
==869== 
==869== For counts of detected and suppressed errors, rerun with: -v
==869== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.05 sec
----------------------------------------------------------
Test Passed.
"Filter.EmptyList" end time: Feb 16 20:18 UTC
"Filter.EmptyList" time elapsed: 00:00:02
----------------------------------------------------------

15/23 Testing: Filter.Size1_F
15/23 Test: Filter.Size1_F
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.Size1_F"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.Size1_F" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==870== Memcheck, a memory error detector
==870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==870== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==870== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.Size1_F
==870== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.Size1_F
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.Size1_F
[       OK ] Filter.Size1_F (40 ms)
[----------] 1 test from Filter (51 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (116 ms total)
[  PASSED  ] 1 test.
==870== 
==870== HEAP SUMMARY:
==870==     in use at exit: 0 bytes in 0 blocks
==870==   total heap usage: 407 allocs, 407 frees, 133,122 bytes allocated
==870== 
==870== All heap blocks were freed -- no leaks are possible
==870== 
==870== For counts of detected and suppressed errors, rerun with: -v
==870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.69 sec
----------------------------------------------------------
Test Passed.
"Filter.Size1_F" end time: Feb 16 20:18 UTC
"Filter.Size1_F" time elapsed: 00:00:01
----------------------------------------------------------

16/23 Testing: Filter.Size1_nF
16/23 Test: Filter.Size1_nF
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.Size1_nF"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.Size1_nF" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==871== Memcheck, a memory error detector
==871== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==871== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==871== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.Size1_nF
==871== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.Size1_nF
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.Size1_nF
[       OK ] Filter.Size1_nF (39 ms)
[----------] 1 test from Filter (53 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (115 ms total)
[  PASSED  ] 1 test.
==871== 
==871== HEAP SUMMARY:
==871==     in use at exit: 0 bytes in 0 blocks
==871==   total heap usage: 408 allocs, 408 frees, 133,131 bytes allocated
==871== 
==871== All heap blocks were freed -- no leaks are possible
==871== 
==871== For counts of detected and suppressed errors, rerun with: -v
==871== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.56 sec
----------------------------------------------------------
Test Passed.
"Filter.Size1_nF" end time: Feb 16 20:18 UTC
"Filter.Size1_nF" time elapsed: 00:00:01
----------------------------------------------------------

17/23 Testing: Filter.Size2_F_nF
17/23 Test: Filter.Size2_F_nF
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.Size2_F_nF"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.Size2_F_nF" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==872== Memcheck, a memory error detector
==872== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==872== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==872== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.Size2_F_nF
==872== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.Size2_F_nF
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.Size2_F_nF
[       OK ] Filter.Size2_F_nF (39 ms)
[----------] 1 test from Filter (50 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (110 ms total)
[  PASSED  ] 1 test.
==872== 
==872== HEAP SUMMARY:
==872==     in use at exit: 0 bytes in 0 blocks
==872==   total heap usage: 415 allocs, 415 frees, 133,316 bytes allocated
==872== 
==872== All heap blocks were freed -- no leaks are possible
==872== 
==872== For counts of detected and suppressed errors, rerun with: -v
==872== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.59 sec
----------------------------------------------------------
Test Passed.
"Filter.Size2_F_nF" end time: Feb 16 20:18 UTC
"Filter.Size2_F_nF" time elapsed: 00:00:01
----------------------------------------------------------

18/23 Testing: Filter.Size2_nF_F
18/23 Test: Filter.Size2_nF_F
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.Size2_nF_F"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.Size2_nF_F" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==873== Memcheck, a memory error detector
==873== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==873== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==873== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.Size2_nF_F
==873== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.Size2_nF_F
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.Size2_nF_F
[       OK ] Filter.Size2_nF_F (32 ms)
[----------] 1 test from Filter (41 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (96 ms total)
[  PASSED  ] 1 test.
==873== 
==873== HEAP SUMMARY:
==873==     in use at exit: 0 bytes in 0 blocks
==873==   total heap usage: 414 allocs, 414 frees, 133,308 bytes allocated
==873== 
==873== All heap blocks were freed -- no leaks are possible
==873== 
==873== For counts of detected and suppressed errors, rerun with: -v
==873== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.67 sec
----------------------------------------------------------
Test Passed.
"Filter.Size2_nF_F" end time: Feb 16 20:18 UTC
"Filter.Size2_nF_F" time elapsed: 00:00:01
----------------------------------------------------------

19/23 Testing: Filter.Size3_nF_F_nF
19/23 Test: Filter.Size3_nF_F_nF
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.Size3_nF_F_nF"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.Size3_nF_F_nF" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==874== Memcheck, a memory error detector
==874== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==874== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==874== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.Size3_nF_F_nF
==874== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.Size3_nF_F_nF
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.Size3_nF_F_nF
[       OK ] Filter.Size3_nF_F_nF (33 ms)
[----------] 1 test from Filter (44 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (103 ms total)
[  PASSED  ] 1 test.
==874== 
==874== HEAP SUMMARY:
==874==     in use at exit: 0 bytes in 0 blocks
==874==   total heap usage: 415 allocs, 415 frees, 133,362 bytes allocated
==874== 
==874== All heap blocks were freed -- no leaks are possible
==874== 
==874== For counts of detected and suppressed errors, rerun with: -v
==874== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.56 sec
----------------------------------------------------------
Test Passed.
"Filter.Size3_nF_F_nF" end time: Feb 16 20:18 UTC
"Filter.Size3_nF_F_nF" time elapsed: 00:00:01
----------------------------------------------------------

20/23 Testing: Filter.Size3_F_nF_F
20/23 Test: Filter.Size3_F_nF_F
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.Size3_F_nF_F"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.Size3_F_nF_F" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==875== Memcheck, a memory error detector
==875== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==875== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==875== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.Size3_F_nF_F
==875== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.Size3_F_nF_F
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.Size3_F_nF_F
[       OK ] Filter.Size3_F_nF_F (42 ms)
[----------] 1 test from Filter (56 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (125 ms total)
[  PASSED  ] 1 test.
==875== 
==875== HEAP SUMMARY:
==875==     in use at exit: 0 bytes in 0 blocks
==875==   total heap usage: 415 allocs, 415 frees, 133,348 bytes allocated
==875== 
==875== All heap blocks were freed -- no leaks are possible
==875== 
==875== For counts of detected and suppressed errors, rerun with: -v
==875== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.99 sec
----------------------------------------------------------
Test Passed.
"Filter.Size3_F_nF_F" end time: Feb 16 20:18 UTC
"Filter.Size3_F_nF_F" time elapsed: 00:00:01
----------------------------------------------------------

21/23 Testing: Filter.SameNodeCheck
21/23 Test: Filter.SameNodeCheck
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.SameNodeCheck"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.SameNodeCheck" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==876== Memcheck, a memory error detector
==876== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==876== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==876== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.SameNodeCheck
==876== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.SameNodeCheck
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.SameNodeCheck
[       OK ] Filter.SameNodeCheck (47 ms)
[----------] 1 test from Filter (57 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (115 ms total)
[  PASSED  ] 1 test.
==876== 
==876== HEAP SUMMARY:
==876==     in use at exit: 0 bytes in 0 blocks
==876==   total heap usage: 420 allocs, 420 frees, 133,458 bytes allocated
==876== 
==876== All heap blocks were freed -- no leaks are possible
==876== 
==876== For counts of detected and suppressed errors, rerun with: -v
==876== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.81 sec
----------------------------------------------------------
Test Passed.
"Filter.SameNodeCheck" end time: Feb 16 20:18 UTC
"Filter.SameNodeCheck" time elapsed: 00:00:01
----------------------------------------------------------

22/23 Testing: Filter.MultipleCalls
22/23 Test: Filter.MultipleCalls
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.MultipleCalls"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.MultipleCalls" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==877== Memcheck, a memory error detector
==877== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==877== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==877== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.MultipleCalls
==877== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.MultipleCalls
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.MultipleCalls
[       OK ] Filter.MultipleCalls (36 ms)
[----------] 1 test from Filter (45 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (100 ms total)
[  PASSED  ] 1 test.
==877== 
==877== HEAP SUMMARY:
==877==     in use at exit: 0 bytes in 0 blocks
==877==   total heap usage: 420 allocs, 420 frees, 133,458 bytes allocated
==877== 
==877== All heap blocks were freed -- no leaks are possible
==877== 
==877== For counts of detected and suppressed errors, rerun with: -v
==877== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.59 sec
----------------------------------------------------------
Test Passed.
"Filter.MultipleCalls" end time: Feb 16 20:18 UTC
"Filter.MultipleCalls" time elapsed: 00:00:01
----------------------------------------------------------

23/23 Testing: Filter.CompareWithLlrec
23/23 Test: Filter.CompareWithLlrec
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.CompareWithLlrec"
Directory: /home/codio/workspace/hw3/hw3_tests/llrec_tests
"Filter.CompareWithLlrec" start time: Feb 16 20:18 UTC
Output:
----------------------------------------------------------
==878== Memcheck, a memory error detector
==878== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==878== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==878== Command: /home/codio/workspace/hw3/hw3_tests/llrec_tests/llrec_tests --gtest_filter=Filter.CompareWithLlrec
==878== 
Running main() from /home/codio/googletest/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.CompareWithLlrec
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.CompareWithLlrec
==878== Invalid read of size 8
==878==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==878==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==878==    by 0x114B19: Filter_CompareWithLlrec_Test::TestBody() (llrec_tests.cpp:400)
==878==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==  Address 0xa is not stack'd, malloc'd or (recently) free'd
==878== 
==878== 
==878== Process terminating with default action of signal 11 (SIGSEGV)
==878==  Access not within mapped region at address 0xA
==878==    at 0x11BC52: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:9)
==878==    by 0x11BCBB: llpivot(Node*&, Node*&, Node*&, int) (llrec.cpp:16)
==878==    by 0x114B19: Filter_CompareWithLlrec_Test::TestBody() (llrec_tests.cpp:400)
==878==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==  If you believe this happened as a result of a stack
==878==  overflow in your program's main thread (unlikely but
==878==  possible), you can try to increase the size of the
==878==  main thread stack using the --main-stacksize= flag.
==878==  The main thread stack size used in this run was 8388608.
==878== 
==878== HEAP SUMMARY:
==878==     in use at exit: 10,390 bytes in 104 blocks
==878==   total heap usage: 408 allocs, 304 frees, 130,660 bytes allocated
==878== 
==878== 64 (16 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 71 of 101
==878==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==878==    by 0x11ADE6: makeList(std::vector<int, std::allocator<int> > const&) (llrec_test_utils.cpp:16)
==878==    by 0x114AB9: Filter_CompareWithLlrec_Test::TestBody() (llrec_tests.cpp:396)
==878==    by 0x5109FD2: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x5103038: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50E00DD: testing::Test::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50E0AF0: testing::TestInfo::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50E13EA: testing::TestSuite::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50F085A: testing::internal::UnitTestImpl::RunAllTests() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x510B1F2: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x5103FBC: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878==    by 0x50EEF2E: testing::UnitTest::Run() (in /usr/lib/x86_64-linux-gnu/libgtest.so.1.11.0)
==878== 
==878== LEAK SUMMARY:
==878==    definitely lost: 16 bytes in 1 blocks
==878==    indirectly lost: 48 bytes in 3 blocks
==878==      possibly lost: 0 bytes in 0 blocks
==878==    still reachable: 10,326 bytes in 100 blocks
==878==         suppressed: 0 bytes in 0 blocks
==878== Reachable blocks (those to which a pointer was found) are not shown.
==878== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==878== 
==878== For counts of detected and suppressed errors, rerun with: -v
==878== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.53 sec
----------------------------------------------------------
Test Failed.
"Filter.CompareWithLlrec" end time: Feb 16 20:18 UTC
"Filter.CompareWithLlrec" time elapsed: 00:00:01
----------------------------------------------------------

End testing: Feb 16 20:18 UTC
